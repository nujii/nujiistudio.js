
/* ---- Base mixins ---- */


@defmixin baseFont() {
	font-family: Helvetica, Arial, sans-serif;
}

@defmixin vertLinearGradient(TOP,BOTTOM) {
    background: TOP; /* Old browsers */
    /* @alternate */background: -moz-linear-gradient(top, TOP 0%, BOTTOM 100%); /* FF3.6+ */
    /* @alternate - TODO: Throws closure error *//*background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,TOP), color-stop(100%,BOTTOM)); /* Chrome,Safari4+ */
    /* @alternate */background: -webkit-linear-gradient(top, TOP 0%,BOTTOM 100%); /* Chrome10+,Safari5.1+ */
    /* @alternate */background: -o-linear-gradient(top, TOP 0%,BOTTOM 100%); /* Opera 11.10+ */
    /* @alternate */background: -ms-linear-gradient(top, TOP 0%,BOTTOM 100%); /* IE10+ */
    /* @alternate */background: linear-gradient(top, TOP 0%,BOTTOM 100%); /* W3C */
    /* @alternate - TODO: Throws closure error *//*filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='TOP', endColorstr='BOTTOM',GradientType=0 ); /* IE6-9 */
}

@defmixin radialGradient(INNER,OUTER) {
	background-color:INNER;
	/* @alternate */background-image: -moz-radial-gradient(center center, ellipse cover, INNER, OUTER 100%);
	/* @alternate */background-image: -webkit-radial-gradient(center center, ellipse cover, INNER, OUTER 100%);
	/* @alternate */background-image: -o-radial-gradient(center center, ellipse cover, INNER, OUTER 100%);
	/* @alternate */background-image: -ms-radial-gradient(center center, ellipse cover, INNER, OUTER 100%);
	/* @alternate */background-image: radial-gradient(center center, ellipse cover, INNER, OUTER 100%);
}

@defmixin shadow(X,Y,BLUR,SPREAD,COLOR) {
	-webkit-box-shadow: X Y BLUR SPREAD COLOR;
	-moz-box-shadow: X Y BLUR SPREAD COLOR;
	box-shadow: X Y BLUR SPREAD COLOR;
}

@defmixin well(X,Y,BLUR,COLOR) {
	-webkit-box-shadow: inset X Y BLUR COLOR;
	-moz-box-shadow: inset X Y BLUR COLOR;
	box-shadow: inset X Y BLUR COLOR;
}

@defmixin transition(PROPS, SPEED, TIMING_FUNCTION) {
	-webkit-transition: PROPS SPEED TIMING_FUNCTION;
	-moz-transition: PROPS SPEED TIMING_FUNCTION;
	-o-transition: PROPS SPEED TIMING_FUNCTION;
	transition: PROPS SPEED TIMING_FUNCTION;
}

@defmixin circle(RADIUS, COLOR){
        background-color: COLOR;
        width: RADIUS;
        height: RADIUS;
        -webkit-border-radius: divide(RADIUS,2); 
        -moz-border-radius: divide(RADIUS,2);
    
}

@defmixin arrowUp(SIZE,COLOR){
    @mixin zero();
	border-left: SIZE solid transparent;
	border-right: SIZE solid transparent;
    border-top: 0px;
	border-bottom: SIZE solid COLOR;
}

@defmixin arrowDown(SIZE,COLOR){
    @mixin zero();
	border-left: SIZE solid transparent;
	border-right: SIZE solid transparent;
	border-top: SIZE solid COLOR;
    border-bottom: 0px;
}

@defmixin arrowLeft(SIZE,COLOR){
    @mixin zero();
	border-left: 0px;
	border-right: SIZE solid COLOR;
    border-top: SIZE solid transparent;
	border-bottom: SIZE solid transparent;
}

@defmixin arrowRight(SIZE, COLOR) {
	@mixin zero();
	border-top: SIZE solid transparent;
	border-bottom: SIZE solid transparent;
	border-left: SIZE solid COLOR;
}

@defmixin zero() {
	width: 0px;
	height: 0px;
	padding: 0px;
	margin: 0px;
	display: inline-block;
}

/* ---- Corner Rounding ---- */

@defmixin rounded(RADIUS) {
    @mixin leftRounded(RADIUS);
	@mixin rightRounded(RADIUS);
}

@defmixin leftRounded(RADIUS) {
	@mixin nwRounded(RADIUS);
	@mixin swRounded(RADIUS);
}

@defmixin rightRounded(RADIUS) {
	@mixin neRounded(RADIUS);
	@mixin seRounded(RADIUS);
}

@defmixin nwRounded(RADIUS) {
	-webkit-border-top-left-radius: RADIUS;
	-moz-border-radius-topleft: RADIUS;
	border-top-left-radius: RADIUS;
}

@defmixin neRounded(RADIUS) {
	-webkit-border-top-right-radius: RADIUS;
	-moz-border-radius-topright: RADIUS;
	border-top-right-radius: RADIUS;
}

@defmixin swRounded(RADIUS) {
	-webkit-border-bottom-left-radius: RADIUS;
	-moz-border-radius-bottomleft: RADIUS;
	border-bottom-left-radius: RADIUS;
}

@defmixin seRounded(RADIUS) {
	-webkit-border-bottom-right-radius: RADIUS;
	-moz-border-radius-bottomright: RADIUS;
	border-bottom-right-radius: RADIUS;
}

/* ---- Buttons ---- */

@defmixin button(BORDER_WIDTH) {
	@mixin vertLinearGradient(BUTTON_TOP, BUTTON_BOTTOM);
	@mixin rounded(6px);
	@mixin shadow(0px,1px,5px,1px,TRANS_BLACK); 
	@mixin transition(all, 0.3s, ease);
	text-decoration: none;
	color: #ffffff;
	padding: 5px 10px;
	border: BORDER_WIDTH solid white;
}


@defmixin buttonHover() {
	@mixin shadow(0px,1px,5px,1px,rgba(0,0,0,0.9));
}